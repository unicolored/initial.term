{"version":3,"file":"terminal.js","sourceRoot":"","sources":["src/terminal.ts"],"names":[],"mappings":"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","sourcesContent":["import {html, LitElement} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {createRef, Ref, ref} from 'lit/directives/ref.js';\nimport {stylesShell} from './lib/styles/styles-shell';\nimport {Shell} from 'initial-shell';\nimport {Audio} from './lib/audio';\nimport {unsafeHTML} from 'lit/directives/unsafe-html.js';\n\n@customElement('initial-terminal')\nexport class Terminal extends LitElement {\n  static override styles = stylesShell;\n\n  @property({type: String}) private banner = 'initial.sh - Type \"info\"';\n  @property({type: Boolean}) private sounds = false;\n\n  protected readonly shell: Shell;\n  private readonly theInput: Ref<HTMLInputElement> = createRef();\n  private audio: Audio | null = null;\n\n  private history: string[] = [];\n  // private messages: string[] = [];\n\n  focusInput = () => {\n    this.theInput?.value?.focus();\n  };\n\n  @property({type: Array}) messages: string[] = []; // Tracks the currently typed text\n  @property({type: Array}) typedMessages: string[] = []; // Tracks the currently typed text\n  @property({type: Number}) typingSpeed = 100; // Speed in milliseconds per character\n\n  constructor() {\n    super();\n\n    this.shell = new Shell({});\n\n    this.shell.events.subscribe((event: Event) => {\n      this.dispatchEvent(event);\n    });\n  }\n\n  override firstUpdated() {\n    console.log('firstUpdated', this.banner);\n    this.shell.init({\n      banner: this.banner,\n    });\n\n    this.history = [...this.shell.history];\n    this.messages = [...this.shell.messages];\n\n    if (this.sounds) {\n      this.audio = new Audio();\n    }\n\n    const paragraphs =\n      this.shadowRoot?.querySelectorAll<HTMLParagraphElement>('p.typed');\n    if (paragraphs) {\n      paragraphs.forEach((p) => {\n        p;\n      });\n    }\n  }\n\n  override disconnectedCallback() {\n    this.shell.events.unsubscribe();\n    this.shell.clear();\n\n    super.disconnectedCallback();\n  }\n\n  override render() {\n    this.history = [...this.shell.history];\n    this.messages = [...this.shell.messages];\n\n    return html`\n      <div class=\"initial-console-window\" @click=${this.handleConsoleClick}>\n        <div class=\"initial-console-wrapper\">\n          <div class=\"initial-console-shell\">\n            ${this.history.map((msg) => {\n              return html`<p class=${msg.startsWith('Error') ? 'error' : ''}>\n                ${unsafeHTML(msg)}\n              </p>`;\n            })}\n            ${this.messages.map((msg) => {\n              return html`<p class=\"typed\">${unsafeHTML(msg)}</p>`;\n            })}\n          </div>\n          <div class=\"initial-console-input-row\">\n            <span class=\"initial-console-input-prompt\">\n              ${html`${unsafeHTML(this.shell.promptSign)}`}\n            </span>\n            <input\n              class=\"initial-console-input-input\"\n              ${ref(this.theInput)}\n              @keydown=${this.handleInput}\n              placeholder=\"\"\n              autofocus\n            />\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  private async handleInput(e: KeyboardEvent) {\n    const input = (e.target as HTMLInputElement).value.trim();\n\n    if (e.key === 'Enter') {\n      (e.target as HTMLInputElement).value = '';\n\n      if (!input) {\n        this.audio?.playSound(100, 'sine', 0.01);\n\n        return;\n      }\n\n      this.shell.putMessage([`${this.shell.promptSign} ${input}`]);\n\n      await this.shell.processInput(input);\n\n      this.requestUpdate();\n    }\n  }\n\n  private handleConsoleClick() {\n    const input = this.theInput.value as HTMLInputElement;\n    if (input) {\n      input.focus();\n    }\n  }\n}\n"]}